# recipe.yaml is configuration for the tool rattler-build.
#
# recipe.yaml reference:
# https://rattler.build/latest/reference/recipe_file/#spec-reference
#
context:
  name: dask-gateway
  version: 2025.4.0

recipe:
  name: ${{ name }}
  version: ${{ version }}

source:
  - url: https://github.com/dask/${{ name }}/archive/${{ version }}.tar.gz
    sha256: e6c4acc597b5f6a9e4a451370a15261e84732470ef85c2f7dcb4ed4e694be281
  # - git: https://github.com/dask/dask-gateway
  #   rev: main

build:
  number: 1

outputs:
  # core package: client
  - package:
      name: dask-gateway
    build:
      skip:
        # FIXME: Windows should be supported, but for now it isn't because of a
        #        failure tracked in https://github.com/conda-forge/conda-smithy/issues/2239
        - win

      noarch: python
      script: |
        cd dask-gateway
        python -m pip install --no-deps --ignore-installed .
    requirements:
      host:
        - python
        - pip
        # Requirements should match build-system.requires for dask-gateway:
        # https://github.com/dask/dask-gateway/blob/main/dask-gateway/pyproject.toml#L4
        #
        - hatchling
      run:
        - python >=${{ python_min }}
        # Requirements should match project.dependencies for dask-gateway:
        # https://github.com/dask/dask-gateway/blob/main/dask-gateway/pyproject.toml#L33
        #
        - aiohttp
        - click >=8.1.3
        - dask >=2022.4.0
        - distributed >=2022.4.0
        - pyyaml
        - tornado
    tests:
      - python:
          imports:
            - dask_gateway
          pip_check: true


  # core package: server
  - package:
      name: dask-gateway-server
    build:
      skip:
        # dask-gateway-server don't support windows, dask-gateway does though
        - win
      script: |
        cd dask-gateway-server
        python -m pip install --no-deps --ignore-installed .
      python:
        entry_points:
          - dask-gateway-jobqueue-launcher = dask_gateway_server.backends.jobqueue.launcher:main
          - dask-gateway-server = dask_gateway_server.app:main

    requirements:
      # host is used instead of build as a workaround to a rattler-build error
      # related to entry_points and failure to use the build env when running
      # the build script
      host:
        - python
        - pip
        # This jinja function expands to go-nocgo_<target-platform>, and that
        # specific package will setup GOOS and GOARCH so that we compile for the
        # right target architecture.
        #
        # For details about compiler(), see
        # https://docs.conda.io/projects/conda-build/en/latest/resources/variants.html#extra-jinja2.
        #
        - ${{ compiler('go-nocgo') }}
        # Requirements should match build-system.requires for dask-gateway-server:
        # https://github.com/dask/dask-gateway/blob/main/dask-gateway-server/pyproject.toml#L4
        #
        - hatchling
      run:
        - python >=${{ python_min }}
        - aiohttp
        - colorlog
        - cryptography
        - traitlets >=5.2.2.post1

    tests:
      - python:
          imports:
            - dask_gateway_server
          pip_check: true
      - script:
          - which dask-gateway-server


  # client: kerberos authentication
  - package:
      name: dask-gateway-kerberos
    requirements:
      run:
        - dask-gateway == ${{ version }}
        # Requirements should match project.optional-dependencies for kerberos:
        # https://github.com/dask/dask-gateway/blob/main/dask-gateway/pyproject.toml#L43
        #
        - if: win
          then:
            - winkerberos
          else:
            - pykerberos

  # server: kerberos authentication
  - package:
      name: dask-gateway-server-kerberos
    build:
      skip:
        - win
    requirements:
      run:
        - dask-gateway-server == ${{ version }}
        # Requirements should match project.optional-dependencies for kerberos:
        # https://github.com/dask/dask-gateway/blob/main/dask-gateway-server/pyproject.toml#L42
        #
        - pykerberos

  # server: local backend
  - package:
      name: dask-gateway-server-local
    build:
      skip:
        - win
    requirements:
      run:
        - dask-gateway-server == ${{ version }}
        # Requirements should match project.optional-dependencies for local:
        # https://github.com/dask/dask-gateway/blob/main/dask-gateway-server/pyproject.toml#L42
        #
        - sqlalchemy >=2.0.0
    tests:
      - python:
          imports:
            - dask_gateway_server.backends.local

  # server: jobqueue backends
  - package:
      name: dask-gateway-server-jobqueue
    build:
      skip:
        - win
    requirements:
      run:
        - dask-gateway-server == ${{ version }}
        # Requirements should match project.optional-dependencies for jobqueue:
        # https://github.com/dask/dask-gateway/blob/main/dask-gateway-server/pyproject.toml#L42
        #
        - sqlalchemy >=2.0.0
    tests:
      - python:
          imports:
            - dask_gateway_server.backends.jobqueue.slurm
            - dask_gateway_server.backends.jobqueue.pbs

  # server: kubernetes backend
  - package:
      name: dask-gateway-server-kubernetes
    build:
      skip:
        - win
    requirements:
      run:
        - dask-gateway-server == ${{ version }}
        # Requirements should match project.optional-dependencies for kubernetes:
        # https://github.com/dask/dask-gateway/blob/main/dask-gateway-server/pyproject.toml#L42
        #
        - kubernetes_asyncio
    tests:
      - python:
          imports:
            - dask_gateway_server.backends.kubernetes

  # NOTE: dask-gateway-server-yarn was removed in the 2025.4.0 release because
  #       builds started to fail in Python 3.11+ and required maintenance in the
  #       dependency skein.
  #
  #       See https://github.com/dask/dask-gateway/issues/882 for more details.
  #
  # # server: hadoop yarn backend
  # - package:
  #     name: dask-gateway-server-yarn
  #   build:
  #     skip:
  #       - win
  #   requirements:
  #     run:
  #       - dask-gateway-server == ${{ version }}
  #       # Requirements should match project.optional-dependencies for yarn:
  #       # https://github.com/dask/dask-gateway/blob/main/dask-gateway-server/pyproject.toml#L42
  #       #
  #       - sqlalchemy >=2.0.0
  #       - skein >=0.7.3
  #   tests:
  #     - python:
  #         imports:
  #           - dask_gateway_server.backends.yarn

about:
  homepage: http://github.com/dask/dask-gateway
  license: BSD-3-Clause
  license_file: LICENSE
  summary: A multi-tenant server for securely deploying and managing Dask clusters.
  description: A multi-tenant server for securely deploying and managing Dask clusters.
  repository: http://github.com/dask/dask-gateway
  documentation: https://gateway.dask.org

extra:
  # To add new maintainers, open an issue with a specific title as described in
  # https://conda-forge.org/docs/maintainer/updating_pkgs.html#updating-the-maintainer-list
  #
  recipe-maintainers:
    - consideRatio
    - jacobtomlinson
    - jcrist
    - martindurant
    - TomAugspurger
