# conda_build_config.yaml is configuration for conda-build and detected by if
# named like that next to meta.yaml. conda-build can also be provided this
# explicitly via a flag documented like this.
#
#  --variant-config-files VARIANT_CONFIG_FILES
#
#     Additional variant config files to add. These yaml files can contain keys
#     such as `c_compiler` and `target_platform` to form a build matrix.
#
# Read more about this "variant config file" in
# https://docs.conda.io/projects/conda-build/en/latest/resources/variants.html.
#

# FIXME 1: Target platform?
#
#          We want our conda-build packaged outputs to be associated with a
#          specific platform. Is this setup automatically by setting target_goos
#          and target_goarch when referencing compiler('go')? Maybe? How do we
#          know?
#
#          I've considered if this is what target_platform is about, but, having
#          tried to zip that from conda_build_config.yaml along with target_goos
#          and target_goarch, I've failed. I figure something is taking
#          precedence, perhaps making the zip_keys provided have different
#          amount of values?
#
#          NOTE: keys listed under zip_keys must be lists with equal amounts of
#                elements.
#
# FIXME 2: dask-gateway-kerberos and platform specific run requirements.
#
#          How do we get two variants of dask-gateway-kerberos, one for
#          installations in windows, and one for other operating systems? We can
#          generate variations, but how do we make those variations be
#          associated with a platform?
#
#          For some reason, target_platform behaves a bit differently. I hoped
#          to use it to indicate that the conda-forge build should be meant for
#          a specific platform.
#



# The configuration below comes from
# https://github.com/conda-forge/dask-gateway-feedstock/issues/27#issuecomment-1108925951
# and includes several
#
go_compiler:
  - go-nocgo
target_gobin:
  - ${PREFIX}/bin/
target_goos:
  - linux
  - linux
  - darwin
  - darwin
target_goarch:
  - amd64
  - arm64
  - amd64
  - arm64

# target_platform:
#   - linux-64
#   - linux-aarch64
#   - osx-64
#   - osx-arm64

# zip_keys is documented well in
# https://docs.conda.io/projects/conda-build/en/latest/resources/variants.html#coupling-keys.
#
# Practically for us in our configuration, it makes the us avoid creating a
# 4x4x4 build matrix from the 4x4x4 variations we have in the three listed keys.
# Instead, we get four variations from these keys, where the variations pick the
# n'th element of each keys' list.
#
zip_keys:
  - target_goos
  - target_goarch
  # - target_platform
